import re
from bs4 import BeautifulSoup
import argparse


def parse_motif_file(motif_file):
    """
    Create a dictionary of motif names and codes.

    Parameters:
    - motif_file: txt MEME file

    Output:
    - Dictionary with motif codes as keys and motif names as values
    """

    motif_dict = {}
    with open(motif_file, 'r') as f:
        motif_code = ""
        for line in f:
            if line.startswith('MOTIF'):
                parts = line.split()
                if len(parts) > 2:
                    motif_code = parts[1]
                    motif_name = ' '.join(parts[2:])  # Account for names with spaces
                    motif_dict[motif_code] = motif_name
    return motif_dict


def replace_motif_names(html_file, motif_dict):
    """
    Create new HTML content with motif codes replaced by motif names.

    Parameters:
    - html_file: HTML file generated by MoDISco Lite
    - motif_dict: Dictionary with motif codes as keys and motif names as values

    Output:
    - New HTML content as a string
    """

    with open(html_file, 'r', encoding='utf-8') as f:
        soup = BeautifulSoup(f, 'html.parser')

    for td in soup.find_all('td'):
        if td.string and re.match(r'^MA\d{4}\.\d$', td.string):
            motif_code = td.string
            if motif_code in motif_dict:
                td.string = motif_dict[motif_code]

    return str(soup)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Replace motif codes in an HTML file with motif names.') 
    parser.add_argument('motif_file', type=str, help='Path to the MEME motif file')
    parser.add_argument('html_file', type=str, help='Path to the HTML file')
    parser.add_argument('-o', '--output', type=str, default='new_motif.html', help='Output file name')

    args = parser.parse_args()

    # Exécution des fonctions
    motif_dict = parse_motif_file(args.motif_file)
    modified_html = replace_motif_names(args.html_file, motif_dict)

    # Écrire le fichier HTML modifié
    with open(args.output, 'w', encoding='utf-8') as f:
        f.write(modified_html)

    print(f"The modified HTML file has been written to {args.output}")
